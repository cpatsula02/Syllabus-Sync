{% extends "layout.html" %}

{% block content %}
<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card shadow-lg">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">Syllabus Sync Analysis Results</h1>
                <a href="{{ url_for('index') }}" class="btn btn-light btn-sm">
                    <i class="fas fa-arrow-left me-1"></i> Back
                </a>
            </div>
            <div class="card-body">
                <div class="results-summary mb-4">
                    {% set total_items = checklist_items|length %}
                    {% set present_items = namespace(count=0) %}
                    {% set missing_items_list = [] %}
                    
                    {% for item in checklist_items %}
                        {% if matching_results[item] is mapping and matching_results[item].present %}
                            {% set present_items.count = present_items.count + 1 %}
                        {% elif matching_results[item] is boolean and matching_results[item] %}
                            {% set present_items.count = present_items.count + 1 %}
                        {% else %}
                            {% set _ = missing_items_list.append(item) %}
                        {% endif %}
                    {% endfor %}
                    
                    {% set missing_items = total_items - present_items.count %}
                    
                    <div class="row">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-6">
                                    <div class="summary-box p-3 rounded bg-light mb-2">
                                        <div class="d-flex align-items-center">
                                            <div class="summary-icon me-3 rounded-circle bg-success text-white">
                                                <i class="fas fa-check"></i>
                                            </div>
                                            <div>
                                                <h4 class="h2 mb-0">{{ present_items.count }}</h4>
                                                <p class="small mb-0">Items Present</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="summary-box p-3 rounded bg-light">
                                        <div class="d-flex align-items-center">
                                            <div class="summary-icon me-3 rounded-circle bg-danger text-white">
                                                <i class="fas fa-times"></i>
                                            </div>
                                            <div>
                                                <h4 class="h2 mb-0">{{ missing_items }}</h4>
                                                <p class="small mb-0">Items Missing</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            {% if missing_items > 0 %}
                            <div class="alert alert-warning mt-3">
                                <h5><i class="fas fa-exclamation-triangle me-2"></i>Missing Items:</h5>
                                <ul class="mb-0">
                                    {% for item in missing_items_list %}
                                    <li>{{ item }}</li>
                                    {% endfor %}
                                </ul>
                            </div>
                            {% else %}
                            <div class="alert alert-success mt-3">
                                <i class="fas fa-check-circle me-2"></i>
                                Congratulations! Your course outline meets all checklist requirements.
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
                
                <h2 class="h4 mb-3">Detailed Checklist</h2>
                
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 50%">Checklist Item</th>
                                <th scope="col" style="width: 35%">Match Details</th>
                                <th scope="col" style="width: 15%">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for item in checklist_items %}
                            {% set is_present = false %}
                            {% set confidence = 0 %}
                            {% set explanation = "" %}
                            {% set method = "traditional" %}
                            
                            {% if matching_results[item] is mapping %}
                                {% set is_present = matching_results[item].present %}
                                {% set confidence = matching_results[item].confidence | float %}
                                {% set explanation = matching_results[item].explanation %}
                                {% if matching_results[item].method is defined %}
                                    {% set method = matching_results[item].method %}
                                {% endif %}
                            {% elif matching_results[item] is boolean %}
                                {% set is_present = matching_results[item] %}
                                {% set confidence = 1.0 if is_present else 0.0 %}
                                {% set explanation = "Found in document" if is_present else "Not found in document" %}
                            {% endif %}
                            
                            <tr class="{% if is_present %}table-success{% else %}table-danger{% endif %}">
                                <td>
                                    <strong>{{ item }}</strong>
                                    {% if explanation %}
                                    <div class="small text-muted mt-1">{{ explanation }}</div>
                                    {% endif %}
                                </td>
                                <td>
                                    <div class="d-flex align-items-center mb-2">
                                        {% if is_present %}
                                        <span class="badge bg-success">Present</span>
                                        {% else %}
                                        <span class="badge bg-danger">Missing</span>
                                        {% endif %}
                                        
                                        {% if method == "academic_review" %}
                                        <span class="badge bg-primary ms-1">Academic Review</span>
                                        {% elif method and method.startswith("openai") %}
                                        <span class="badge bg-primary ms-1">AI Analysis</span>
                                        {% elif method %}
                                        <span class="badge bg-secondary ms-1">{{ method }}</span>
                                        {% else %}
                                        <span class="badge bg-secondary ms-1">Pattern Matching</span>
                                        {% endif %}
                                    </div>
                                    
                                    {% if is_present %}
                                    <button class="btn btn-sm btn-outline-success view-match-btn" 
                                            data-item="{{ item }}" data-bs-toggle="modal" data-bs-target="#matchDetailsModal">
                                        <i class="fas fa-search me-1"></i> View Match
                                    </button>
                                    {% endif %}
                                </td>
                                <td>
                                    {% if not is_present %}
                                    <button class="btn btn-sm btn-outline-primary copy-text" data-text="{{ item }}">
                                        <i class="fas fa-copy me-1"></i> Copy
                                    </button>
                                    {% else %}
                                    <span class="text-muted">-</span>
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
                
                <div class="mt-4">
                    <div class="alert alert-info">
                        <h5><i class="fas fa-info-circle me-2"></i>About This Analysis</h5>
                        <p>This tool uses a combination of pattern matching and AI-powered analysis to check if your course outline meets the university's requirements.</p>
                        <ul class="mb-0">
                            <li><span class="badge bg-primary">AI Analysis</span> - Uses advanced AI to understand content semantically</li>
                            <li><span class="badge bg-secondary">Pattern Matching</span> - Uses traditional text analysis techniques</li>
                        </ul>
                    </div>
                </div>
                
                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <a href="{{ url_for('download_pdf') }}" class="btn btn-primary" target="_blank">
                        <i class="fas fa-file-pdf me-2"></i> View PDF Report
                    </a>
                </div>
            </div>
            <div class="card-footer text-center">
                <p class="mb-0 small text-muted">Syllabus Sync - University of Calgary</p>
            </div>
        </div>
    </div>
</div>

<!-- Match Details Modal -->
<div class="modal fade" id="matchDetailsModal" tabindex="-1" aria-labelledby="matchDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="matchDetailsModalLabel">Match Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h6 class="mb-3" id="modalItemText"></h6>
                <div class="alert alert-success">
                    <div class="mb-2"><strong>Match found in document:</strong></div>
                    <div id="matchExcerpt" class="p-3 bg-light rounded border" style="font-size: 15px; line-height: 1.5;">
                        <p class="placeholder-glow">
                            <span class="placeholder col-12"></span>
                            <span class="placeholder col-12"></span>
                            <span class="placeholder col-10"></span>
                        </p>
                    </div>
                </div>
                <div id="highlightExplanation" class="alert alert-info mt-3" style="display: none;">
                    <i class="fas fa-info-circle me-1"></i> 
                    <strong>How to read this:</strong> The highlighted terms in <span style="background-color: #c2f0c2; font-weight: bold;">green</span> show exactly which parts of the document match the checklist requirement.
                </div>
                <div class="text-muted small">
                    <i class="fas fa-info-circle me-1"></i> 
                    The matched content is shown above. Key terms and related content were used to identify this match.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Handle copy button clicks
        document.querySelectorAll('.copy-text').forEach(function(button) {
            button.addEventListener('click', function() {
                var text = this.getAttribute('data-text');
                navigator.clipboard.writeText(text).then(function() {
                    // Change button text temporarily
                    var originalHTML = button.innerHTML;
                    button.innerHTML = '<i class="fas fa-check me-1"></i> Copied!';
                    button.classList.remove('btn-outline-primary');
                    button.classList.add('btn-success');
                    
                    setTimeout(function() {
                        button.innerHTML = originalHTML;
                        button.classList.remove('btn-success');
                        button.classList.add('btn-outline-primary');
                    }, 2000);
                });
            });
        });
        
        // Handle view match button clicks
        document.querySelectorAll('.view-match-btn').forEach(function(button) {
            button.addEventListener('click', function() {
                var item = this.getAttribute('data-item');
                document.getElementById('modalItemText').textContent = item;
                document.getElementById('matchExcerpt').innerHTML = '<div class="spinner-border spinner-border-sm text-primary" role="status"><span class="visually-hidden">Loading...</span></div> Fetching match details...';
                document.getElementById('highlightExplanation').style.display = 'none';
                
                // Fetch the match details
                fetch('/get-match-details?item=' + encodeURIComponent(item))
                    .then(response => response.json())
                    .then(data => {
                        if (data.found && data.excerpt) {
                            // Extract key terms from the checklist item for highlighting
                            const itemText = item.toLowerCase();
                            const keyTerms = [];
                            
                            // Extract words longer than 3 letters, excluding common words
                            const commonWords = ['and', 'the', 'that', 'this', 'with', 'from', 'have', 
                                              'for', 'are', 'should', 'would', 'could', 'will', 
                                              'been', 'must', 'they', 'their', 'there', 'than', 
                                              'when', 'what', 'where', 'which'];
                            
                            const words = itemText.match(/\b\w+\b/g) || [];
                            words.forEach(word => {
                                if (word.length > 3 && !commonWords.includes(word)) {
                                    keyTerms.push(word);
                                }
                            });
                            
                            // Add special terms based on item content
                            if (itemText.includes('email') || itemText.includes('contact')) {
                                keyTerms.push('@ucalgary.ca');
                            }
                            if (itemText.includes('late') || itemText.includes('deadline')) {
                                keyTerms.push('late', 'deadline', 'penalty');
                            }
                            if (itemText.includes('grade')) {
                                keyTerms.push('grade', 'grading', 'assessment', 'mark');
                            }
                            
                            // Highlight the matching terms in the excerpt
                            let highlightedExcerpt = data.excerpt;
                            
                            // Sort terms by length (longest first) to avoid highlighting parts of words
                            keyTerms.sort((a, b) => b.length - a.length);
                            
                            // Create a safe version for case-insensitive matching
                            const excerptLower = data.excerpt.toLowerCase();
                            
                            // Create spans with different highlight colors for better visibility
                            const highlightColors = ['#c2f0c2', '#d6f5d6', '#e6ffe6']; // Different shades of green
                            let colorIndex = 0;
                            
                            // First find all matches to avoid overlapping highlights
                            const matches = [];
                            keyTerms.forEach(term => {
                                const termLower = term.toLowerCase();
                                let startPos = 0;
                                while (startPos < excerptLower.length) {
                                    const matchPos = excerptLower.indexOf(termLower, startPos);
                                    if (matchPos === -1) break;
                                    
                                    matches.push({
                                        start: matchPos,
                                        end: matchPos + termLower.length,
                                        term: data.excerpt.substring(matchPos, matchPos + termLower.length),
                                        original: term
                                    });
                                    
                                    startPos = matchPos + 1;
                                }
                            });
                            
                            // Sort matches by position
                            matches.sort((a, b) => a.start - b.start);
                            
                            // Remove overlapping matches
                            const filteredMatches = [];
                            let lastEnd = -1;
                            
                            matches.forEach(match => {
                                if (match.start >= lastEnd) {
                                    filteredMatches.push(match);
                                    lastEnd = match.end;
                                }
                            });
                            
                            // Build the highlighted excerpt
                            let result = '';
                            let lastPos = 0;
                            
                            filteredMatches.forEach(match => {
                                // Add text before this match
                                result += data.excerpt.substring(lastPos, match.start);
                                
                                // Add the highlighted match
                                const color = highlightColors[colorIndex % highlightColors.length];
                                result += `<span class="highlight" style="background-color: ${color}; font-weight: bold;">${match.term}</span>`;
                                
                                lastPos = match.end;
                                colorIndex++;
                            });
                            
                            // Add any remaining text
                            result += data.excerpt.substring(lastPos);
                            
                            // Display the highlighted excerpt
                            document.getElementById('matchExcerpt').innerHTML = result;
                            
                            // Show explanation of highlighted terms if matches were found
                            document.getElementById('highlightExplanation').style.display = filteredMatches.length > 0 ? 'block' : 'none';
                        } else {
                            document.getElementById('matchExcerpt').textContent = 'No specific excerpt available. The item was detected through pattern matching.';
                            document.getElementById('highlightExplanation').style.display = 'none';
                        }
                    })
                    .catch(error => {
                        document.getElementById('matchExcerpt').textContent = 'Error fetching match details. Please try again.';
                        document.getElementById('highlightExplanation').style.display = 'none';
                        console.error('Error:', error);
                    });
            });
        });
    });
</script>
{% endblock %}
